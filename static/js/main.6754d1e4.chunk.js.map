{"version":3,"sources":["components/Statistics/Statistics.module.css","components/Section/Section.module.css","components/FeedbackOptions/FeedbackOptions.module.css","components/Notification/Notification.module.css","components/Section/Section.js","components/FeedbackOptions/FeedbackOptions.js","components/Statistics/Statistics.js","components/Notification/Notification.js","App.jsx","index.js"],"names":["module","exports","Section","props","title","children","className","s","section","FeedbackOptions","options","onLeaveFeedback","map","option","type","button","value","onClick","target","Statistics","propsArray","Object","entries","key","statElem","statKey","statVal","Notification","message","App","useState","good","setGood","neutral","setNeutral","bad","setBad","countTotalFeedback","prevValue","total","positive","Math","round","root","document","querySelector","ReactDOM","render","StrictMode"],"mappings":"qIACAA,EAAOC,QAAU,CAAC,MAAQ,0BAA0B,SAAW,6BAA6B,QAAU,4BAA4B,QAAU,8B,kBCA5ID,EAAOC,QAAU,CAAC,QAAU,yBAAyB,MAAQ,yB,iBCA7DD,EAAOC,QAAU,CAAC,OAAS,kC,gBCA3BD,EAAOC,QAAU,CAAC,QAAU,gC,sICGb,SAASC,EAAQC,GAAQ,IAC5BC,EAAoBD,EAApBC,MAAOC,EAAaF,EAAbE,SACf,OAAO,0BAASC,UAAWC,IAAEC,QAAtB,UACC,oBAAIF,UAAWC,IAAEH,MAAjB,SAAyBA,IACxBC,K,oBCJE,SAASI,EAAgBN,GAAQ,IACpCO,EAA4BP,EAA5BO,QAASC,EAAmBR,EAAnBQ,gBAEjB,OAAO,mCAEFD,EAAQE,KAAI,SAAAC,GAAM,OACf,wBAEIC,KAAK,SACLR,UAAWC,IAAEQ,OACbC,MAAOH,EACPI,QAAS,gBAAGC,EAAH,EAAGA,OAAH,OACLP,EAAgBO,EAAOF,QAN/B,SAQKH,GAPIA,Q,4BCPN,SAASM,EAAWhB,GAC/B,IAAMiB,EAAU,YAAOC,OAAOC,QAAQnB,IACtC,OAAO,qCACH,oBAAIG,UAAWC,IAAEH,MAAjB,wBACCgB,EAAWR,KAAI,mCAAEW,EAAF,KAAOP,EAAP,YACZ,oBAAaV,UAAWC,IAAEiB,SAA1B,UACI,uBAAMlB,UAAWC,IAAEkB,QAAnB,UAA6BF,EAA7B,QACA,sBAAMjB,UAAWC,IAAEmB,QAAnB,SAA6BV,MAFzBO,S,qBCLL,SAASI,EAAT,GAAkC,IAAXC,EAAU,EAAVA,QAClC,OAAO,mBAAGtB,UAAWC,IAAEqB,QAAhB,SAA0BA,ICsCtBC,MArCf,WAAiB,IAAD,EACWC,mBAAS,GADpB,mBACNC,EADM,KACAC,EADA,OAEgBF,mBAAS,GAFzB,mBAEPG,EAFO,KAEEC,EAFF,OAGQJ,mBAAS,GAHjB,mBAGPK,EAHO,KAGFC,EAHE,KAWRC,EAAqB,WACrB,OAAON,EAAOE,EAAUE,GAQ1B,OACI,eAACjC,EAAD,CAASE,MAAM,wBAAf,UAEA,cAACK,EAAD,CAAiBC,QAAS,CAAC,OAAQ,UAAW,OAAQC,gBAlB1C,SAACK,GACN,SAARA,GAAgBgB,GAAQ,SAAAM,GAAS,OAAIA,EAAU,KACvC,YAARtB,GAAmBkB,GAAW,SAAAI,GAAS,OAAIA,EAAU,KAC7C,QAARtB,GAAeoB,GAAO,SAAAE,GAAS,OAAIA,EAAU,QAgBhB,IAAzBD,IACD,cAACV,EAAD,CAAcC,QAAQ,sBACtB,cAACT,EAAD,CACEY,KAAMA,EACNE,QAASA,EACTE,IAAKA,EACLI,MAAOF,IACPG,SAAQ,UAfgB,IAAzBH,IAA6B,EAClCI,KAAKC,MAAMX,EAAOM,IAAuB,KAc3B,WChChBM,EAAOC,SAASC,cAAc,SAEpCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFL,K","file":"static/js/main.6754d1e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"Statistics_title__3PVIg\",\"statElem\":\"Statistics_statElem__2-HqJ\",\"statKey\":\"Statistics_statKey__3APUR\",\"statVal\":\"Statistics_statVal__2CoRm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"section\":\"Section_section__Ap5Zy\",\"title\":\"Section_title__2S6oE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"FeedbackOptions_button__3n-hy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"message\":\"Notification_message__eciZi\"};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Section.module.css';\n\nexport default function Section(props) {\n    const { title, children } = props;\n    return <section className={s.section}>\n            <h1 className={s.title}>{title}</h1>\n            {children}\n        </section>\n}\n\nSection.propTypes = {\n    title: PropTypes.string.isRequired,\n    children: PropTypes.arrayOf(PropTypes.element.isRequired),\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './FeedbackOptions.module.css';\n\nexport default function FeedbackOptions(props) {\n    const { options, onLeaveFeedback} = props;\n    // const optionsArray = [...Object.keys(options)];\n    return <>\n        {/* {optionsArray.map(option => */}\n        {options.map(option =>\n            <button\n                key={option}\n                type='button'\n                className={s.button}\n                value={option}\n                onClick={({ target }) =>\n                    onLeaveFeedback(target.value)\n                }>\n                {option}\n            </button>)}\n        </>\n}\n\nFeedbackOptions.propTypes = {\n    // options: PropTypes.objectOf(PropTypes.number.isRequired),\n    options: PropTypes.arrayOf(PropTypes.string.isRequired),\n    onLeaveFeedback: PropTypes.func.isRequired,\n}","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Statistics.module.css';\n\nexport default function Statistics(props) {\n    const propsArray = [...Object.entries(props)];\n    return <>\n        <h2 className={s.title}>Statistics</h2>\n        {propsArray.map(([key, value]) =>\n            <p key={key} className={s.statElem}>\n                <span className={s.statKey}>{key}: </span>\n                <span className={s.statVal}>{value}</span>\n            </p>)}\n        </>\n}\n\nStatistics.propTypes = {\n    good: PropTypes.number.isRequired,\n    neutral: PropTypes.number.isRequired,\n    bad: PropTypes.number.isRequired,\n    total: PropTypes.number.isRequired,\n    positive: PropTypes.string.isRequired,\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport s from './Notification.module.css';\n\nexport default function Notification({message}) {\n    return <p className={s.message}>{message}</p>\n}\n\nNotification.propTypes = {\n    message: PropTypes.string.isRequired,\n}","import { useState } from 'react';\nimport Section from './components/Section';\nimport FeedbackOptions from \"./components/FeedbackOptions\";\nimport Statistics from \"./components/Statistics\";\nimport Notification from './components/Notification';\n\nfunction App () {\n  const  [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const addFeedback = (value) => {\n      if(value==='good'){setGood(prevValue => prevValue+1)}\n      if(value==='neutral'){setNeutral(prevValue => prevValue+1)}\n      if(value==='bad'){setBad(prevValue => prevValue+1)}\n    }\n\n  const countTotalFeedback = () => {\n        return good + neutral + bad;\n    }\n\n  const countPositiveFeedbackPercentage = () => {\n      return countTotalFeedback() === 0 ? 0 :\n        Math.round(good / countTotalFeedback() * 100);\n    }\n\n      return (\n          <Section title=\"Please leave Feedback\">\n          {/* <FeedbackOptions options={{ 'good': good, 'neutral':neutral, 'bad':bad}} onLeaveFeedback={addFeedback}/> */}\n          <FeedbackOptions options={['good', 'neutral', 'bad']} onLeaveFeedback={addFeedback}/>\n            {countTotalFeedback() === 0 ?\n            <Notification message=\"No feedback given\"/> :\n            <Statistics\n              good={good}\n              neutral={neutral}\n              bad={bad}\n              total={countTotalFeedback()}\n              positive={`${countPositiveFeedbackPercentage()}%`}\n            />}\n          </Section>\n        )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App.jsx';\n\nconst root = document.querySelector('#root');\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  root,\n);\n"],"sourceRoot":""}